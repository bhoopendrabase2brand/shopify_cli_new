<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Facebook API Example</title>
  <script src="https://code.jquery.com/jquery-3.7.0.min.js" integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous"></script>
</head>
<body>
  <div id="fb-root"></div>
  <p id="demo"></p>
  <button class="loginFacebook" onclick="loginWithFacebook()">Login with Facebook</button>

  <script>
    window.fbAsyncInit = function() {
      FB.init({
        appId: '636750821333417',
        autoLogAppEvents: true,
        xfbml: true,
        version: 'v17.0'
      });

      FB.getLoginStatus(function(response) {
        if (response.status === 'connected') {
          console.log('User is logged in');

          function getInstagramAccountData() {
            FB.api('/me?fields=instagram_business_account{id}', function(response) {
              if (response && !response.error && response.instagram_business_account) {
                const instagramAccountId = response.instagram_business_account.id;
                console.log('Instagram Account ID:', instagramAccountId);
                $("#demo").text(`Instagram Account ID: ${instagramAccountId}`);

                // Use the Instagram Account ID to fetch media data
                fetchInstagramMediaData(instagramAccountId);
              } else {
                console.log('No Instagram Business Account found.');
                $("#demo").text('No Instagram Business Account found.');
              }
            });
          }

          function fetchInstagramMediaData(accountId) {
            FB.api(`/${accountId}?fields=media{media_url,like_count}`, function(response) {
              if (response && !response.error && response.media && response.media.data) {
                const mediaData = response.media.data;
                mediaData.forEach(media => {
                  const mediaUrl = media.media_url;
                  const likeCount = media.like_count;
                  console.log('MEDIA IMAGE:', mediaUrl);
                  console.log('LIKE COUNT:', likeCount);
                  // Process the media data as needed
                });
              }
            });
          }

          getInstagramAccountData();
        }
      });
    };

    function loginWithFacebook() {
      FB.logout(function(response) {
        // Person is now logged out
      });

      FB.login(function(response) {
        if (response.status === 'connected') {
          // User logged in successfully
          console.log('response', response);
        } else {
          // User cancelled the login or encountered an error
          console.log('User cancelled login or encountered an error.');
        }
      }, { scope: 'public_profile,email,instagram_basic' });
    }

    // Load the Facebook SDK asynchronously
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "https://connect.facebook.net/en_US/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
  </script>
</body>
</html>
